buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:6.+'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'

version = "${version_major}.${version_minor}.${version_patch}"
group = 'darktire.baubles'
archivesBaseName = "${name}-${minecraft_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
//    mappings channel: 'snapshot', version: '20180814-1.12'
    runs {
        configureEach {
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
        }

        client {
            workingDirectory file('run')
        }

        server {}
    }
}

repositories {
    maven {
        name = "Curse Maven"
        url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft([
        group  : "${forge_group}",
        name   : "forge",
        version: "${minecraft_version}-${forge_version}"
    ])

//    implementation ("net.minecraftforge:mergetool:0.2.3.3") { force = true }
    implementation fg.deobf("curse.maven:trinkets-and-baubles-279900:5717039")
}

tasks.register('replaceResources', Copy) {
    outputs.upToDateWhen { false }
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand version:version, mcversion:minecraft_version
    }
    into 'build/classes/java/main'
}

tasks.register('copyResources', Copy) {
    outputs.upToDateWhen { false }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    into 'build/classes/java/main'
}

processResources {}

classes.configure {
    dependsOn(replaceResources)
    dependsOn(copyResources)
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes([
            'Specification-Title'     : 'BaublesEX',
            'Specification-Vendor'    : 'darktire',
            'Specification-Version'   : "${version}",
            'Implementation-Title'    : name,
            'Implementation-Version'  : "${version}",
            'Implementation-Vendor'   : 'darktire',
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "Automatic-Module-Name": "${group}",
        ])
    }
    finalizedBy('reobfJar')
}

tasks.register('apiJar', Jar) {
    archiveClassifier = 'api'
    from sourceSets.main.output
    from sourceSets.main.allSource
    include 'baubles/api/**'
}

artifacts {
    archives apiJar
}